import asyncio

from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton, 
                           InlineKeyboardMarkup, InlineKeyboardButton)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


from config import TOKEN
from keyboard import weather_keyboard
from find_weather import check_weather
from user_tabel import write_user, find_city, update_city, find_user


bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)



class Form(StatesGroup):
    waiting_for_city = State()


@dp.message(CommandStart())
async def start_command(message: Message):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∏.
    await message.answer("üëã –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –Ω–∞ —É–ª–∏—Ü–µ? üßê\n\n–Ø –≤–∞–º –ø–æ–º–æ–≥—É! ‚òÄÔ∏è\n\n–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑.",
                         reply_markup=weather_keyboard())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫—Ä–Ω–æ–ø–∫—É "weather_in_city"
@dp.callback_query(F.data == 'weather_in_city')
async def watch(callback: CallbackQuery):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–æ–¥–∞ –≤ –º–æ–µ–º –≥–æ—Ä–æ–¥–µ", –≤—ã–≤–æ–¥–∏—Ç –ø–æ–≥–æ–¥—É –∏–ª–∏ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥.
    await callback.answer()
    user_id = callback.message.chat.id
    city_ = find_city(user_id)
    weather = check_weather(city=city_)
    if weather != None and city_ != None:
        await callback.message.edit_text(weather, reply_markup=weather_keyboard())
    elif city_ == None:
        await callback.message.edit_text("üó∫Ô∏è –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Äú–ì–æ—Ä–æ–¥ üèôÔ∏è‚Äù –∏ –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.", reply_markup=weather_keyboard())
    else:
        await callback.message.edit_text("–ü—Ä–æ—Å–∏–º –ø—Ä–æ—à–µ–Ω–∏—è, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... üòï", reply_markup=weather_keyboard())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫—Ä–Ω–æ–ø–∫—É "profile"
@dp.callback_query(F.data == 'change_city')
async def watch(callback: CallbackQuery, state: FSMContext):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥", –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥.
    await callback.answer()
    user_id = callback.message.chat.id
    profile = find_user(user_id)
    await state.set_state(Form.waiting_for_city)
    if profile != None:
        await callback.message.edit_text(f"üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n\nüìç user_id: {profile[0]}\nüèôÔ∏è –ì–æ—Ä–æ–¥: {profile[1]}",
                                        reply_markup=weather_keyboard())
    else:
        await callback.message.edit_text(f"üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n\nüìç user_id: .......\nüèôÔ∏è –ì–æ—Ä–æ–¥: .......",
                                        reply_markup=weather_keyboard())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
@dp.message(Form.waiting_for_city)
async def process_city(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≥–æ—Ä–æ–¥–∞, –æ–±–Ω–æ–≤–ª—è–µ—Ç –µ–≥–æ –≤ –ë–î –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å.
    user_id = message.from_user.id
    city = message.text
    update_city(user_id, city)
    profile = find_user(user_id)
    if profile != None:
        await message.answer(f"üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:\n\nüìç user_id: {profile[0]}\nüèôÔ∏è –ì–æ—Ä–æ–¥: {profile[1]}", reply_markup=weather_keyboard())
    await state.clear()


async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç –≤ —Ä–µ–∂–∏–º–µ polling.
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())